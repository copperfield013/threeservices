package com.abc.rule.people.secondipm.secondipmTimer;


import com.abc.fuse.improve.attribute.FuseAttribute;
import com.abc.relation.RecordRelation;
import  com.zhsq.biz.constant.people.PeopleItem;
import  com.zhsq.biz.constant.family.FamilyItem;
import com.abc.rrc.record.Attribute;
import com.abc.rrc.factory.AttributeFactory;
import com.zhsq.biz.family.algorithm.DataIntrospection;
import com.zhsq.biz.constant.EnumKeyValue;
import com.zhsq.biz.constant.RelationType;
import com.abc.fuse.improve.attribute.leaf.FuseLeafAttribute;
import com.zhsq.biz.common.CommonCalculation;
import com.zhsq.biz.people.algorithm.IDIntrospection;
import com.zhsq.biz.constant.DateUtils;
import com.abc.fuse.improve.attribute.FuseLeafAttrFactory;
import com.zhsq.biz.people.algorithm.BirthdayIntrospection;
import com.abc.fuse.improve.attribute.label.FuseLabelAttribute;
import com.abc.ops.builder.RecordRelationOpsBuilder;
import com.abc.ops.builder.RootRecordOpsBuilder;
import com.abc.transfer.builder.IRootRecordBuilder;
import com.zhsq.biz.constant.BaseConstant;
import com.zhsq.biz.constant.interview.InterviewItem;
import com.abc.transfer.builder.RootRecordBuilderFactory;
import com.abc.rrc.record.RootRecord;
import com.zhsq.biz.constant.CommonAlgorithm;
import com.zhsq.biz.constant.DateUtils;

global java.lang.String hostCode; 
global java.lang.String hostType;

global java.lang.String userCode;
global java.lang.String recordCode;
global java.lang.String recordName;

global java.util.List recordRelationOpsBuilderNew;
global java.util.List rootRecordList;
global java.util.List attributeList;
global java.util.List removedLabelList;
global java.util.List addedLabelList;
global java.util.List putFuseLeafAttributeList;
global java.util.List addedLeafAttrList;
global java.util.Map removedLeafAttrMap;
global com.abc.rrc.record.RootRecord rootRecord;
global  com.abc.ops.builder.RecordRelationOpsBuilder recordRelationOpsBuilder;
global com.abc.complexus.RecordComplexus recordComplexus;

//80岁以上老人走访规则
rule "80岁以上老人"
	when
		$nameA:FuseAttribute(name==PeopleItem.出生日期, CommonCalculation.isBasicLawful(attribute.sqlValue));
		eval(BirthdayIntrospection.extractAge($nameA.getValueForShow())>=80);
	then
		//激活 
	kcontext.getKnowledgeRuntime().getAgenda().getAgendaGroup( "走访80岁老人" ).setFocus();
end

rule "80岁以上待走访老人"
	salience 8
	agenda-group "走访80岁老人"
when
	not RecordRelation(type==RelationType.RR_人口信息_走访记录_走访记录, $value:right,CommonCalculation.isBasicLawful(CommonAlgorithm.getDataValue(recordComplexus, $value, InterviewItem.走访类型)), EnumKeyValue.ENUM_走访类型_老年人走访.equals(Integer.parseInt(String.valueOf(CommonAlgorithm.getDataValue(recordComplexus, $value, InterviewItem.走访类型)))))
then 
	Attribute attribute=AttributeFactory.newInstance(PeopleItem._80岁老人月走访状态, EnumKeyValue.ENUM_80岁老人月走访状态_未走访);
	attributeList.add(attribute);
end

rule "存在走访记录30天内"//与当前时间比较， 在30天内
	salience 7
	agenda-group "走访80岁老人"
	when 
		eval( CommonCalculation.isBasicLawful(IDIntrospection.getNewestRelationPro(recordComplexus, recordName, recordCode, RelationType.RR_人口信息_走访记录_走访记录, InterviewItem.走访时间, InterviewItem.走访时间) ))
		eval(DateUtils.getShortDaytoCurr(IDIntrospection.getNewestRelationPro(recordComplexus, recordName, recordCode, RelationType.RR_人口信息_走访记录_走访记录, InterviewItem.走访时间, InterviewItem.走访时间) ) <30)
	then
		Attribute attribute=AttributeFactory.newInstance(PeopleItem._80岁老人月走访状态, EnumKeyValue.ENUM_80岁老人月走访状态_已走访);
		attributeList.add(attribute);
end

rule "存在走访记录30天外"//与当前时间比较， 在30天外
	salience 7
	agenda-group "走访80岁老人"
	when 
		eval( CommonCalculation.isBasicLawful(IDIntrospection.getNewestRelationPro(recordComplexus, recordName, recordCode, RelationType.RR_人口信息_走访记录_走访记录, InterviewItem.走访时间, InterviewItem.走访时间) ))
		eval(DateUtils.getShortDaytoCurr(IDIntrospection.getNewestRelationPro(recordComplexus, recordName, recordCode, RelationType.RR_人口信息_走访记录_走访记录, InterviewItem.走访时间, InterviewItem.走访时间)) >=30)
	then
		Attribute attribute=AttributeFactory.newInstance(PeopleItem._80岁老人月走访状态, EnumKeyValue.ENUM_80岁老人月走访状态_未走访);
		attributeList.add(attribute);
		
		//这里要发布一个任务
		
		
		
end
 